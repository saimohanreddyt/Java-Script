

Writing into an HTML element, using innerHTML.
Writing into the HTML output using document.write().
Writing into an alert box, using window.alert().
Writing into the browser console, using console.log().
-------------------------------------------------------------------
var
let           
const
/*var declarations are globally scoped or function scoped while let and const are block scoped
var variables can be updated and re-declared within its scope
let variables can be updated but not re-declared
const variables can neither be updated nor re-declared*/
-------------------------------------------------------------------------------------------------------------
//operations
var a=10;
var b=20;
console.log(x=+y);
//Concatenate
let name ="john";
let age=21;          
age=age+1;
console.log('My name is '+name+'.'+' I am '+age+'yrs old.');

let Fname ="john";
let Lname="Abraham";          
console.log(`${Fname} ${Lname}`);


let Fname ="john";
let Lname="Abraham";          
console.log(`${Fname} ${Lname}`.toUppercase());
console.log(`${Fname} ${Lname}`.toLowercase());
console.log(`${Fname} ${Lname}`.splict(' ')); /*It will break the every single space @given splict(' ')*/

-----------------------------------------------------------------------------------------------------------
//Functon    
function name(parameter1, parameter2, parameter3) {
  // code to be executed
}
/*Define the code once, and use it many times.
You can use the same code many times with different arguments,
to produce different results.*/
<script>
   function ShowMessage() {
   document.write("Hello World!");
        }
    ShowMessage();
</script>


--------similarly to other Arithmetic Operations----------
<script>
   function ShowMessage(a,b) {
   document.write("Hello World!");
        }
    ShowMessage(7,9);
</script>


----------if conditon:
<script>
	if( 1 > 0)
	{
		document.write("1 is greater than 0");
	}

	if( 1 < 0)
	{
		document.write("1 is less than 0");
	}
</script>
------------if else
        var a=2;
	if(  1 > 0)
	{
		document.write("A greater than 1");
	}
	else
	{
		document.write("MA less than or equal 1");
	}
--------------else if
       var a= 500;
	var b = 1000;
	if( a > b)
	{
	document.write("a is greater than b");
	}
	else if(a < b)
	{
	document.write("a is less than b");
	}
---------------------------------------------------------------------

<script>
	var a = 3;
	switch (a/3) {
	case 1:
	document.write("case 1 executed");
	break;
	case 2:
	document.write("case 2 executed");
	break;
	case 3:
	document.write("case 3 executed");
	break;
	case 4:
	document.write("case 4 executed");
	break;
	default:
	document.write("default case executed");
	}
</script>
---------------switch with String Type Case
<script>
var str = "bill";
switch (str) 
{
	case "steve":
		alert("This is Steve");
	case "bill":
		alert("This is Bill");
		break;
	case "john":
		alert("This is John");
		break;
	default:
		alert("Unknown Person");
		break;
}
 </script>
---------------for loop
<script>
	for (var i = 0; i < 5; i++)
	{
		document.write(i);
	}
</script>
--------------for loop on Array
<script>
var arr = [10, 11, 12, 13, 14];
var i = 0;
for (; ;) {
if (i >= 5)
break;
document.write(arr[i]);        
i++;
}
</script>
--------------while loop
var i =0;

while(i < 5)
{
    console.log(i);
    i++;
}
----------------eval //Call the function and get the result
var result;

function Sum(val1, val2)
{
    return val1 + val2;
}

eval("result = Sum(5, 5);");

document.write(result)
------------------------Error Handling
try
{
    var result  =  Sum(10, 20); // Sum is not defined yet
}
catch(ex)
{
    document.getElementById("errorMessage").innerHTML = ex;
}
--------------strict mode
Use of undefined variables, Use of reserved keywords as variable or function name, 
Duplicate properties of an object, Duplicate parameters of function, Assign values to read-only properties, 
Modifying arguments object , Octal numeric literals, with statement, eval function to create a variable
